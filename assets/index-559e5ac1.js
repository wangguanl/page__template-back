import{G as m,P as D}from"./index-00590f74.js";import{aq as g,A as V,r as d,c as S,a8 as p,R as n,ac as C,Q as h,k as U}from"./split-chunks_vendors-322ffc50.js";import{t as I}from"./split-chunks_modules-libs-89c8af2b.js";import{A as L,B as _,s as r,C as y}from"./split-chunks_modules-element-plus-537015e5.js";/* empty css                    */import"./split-chunks_modules-icons-ce635f6d.js";const H=(...e)=>m("/lexiconClassification/query",[],...e),P=(...e)=>D("/lexicon/complex",["_id","lexiconClassificationID","name","content"],...e),T=(...e)=>m("/lexicon/query",["lexiconClassificationID","name"],...e),A=(...e)=>D("/lexicon/delete",["_id","_ids"],...e),R=g("common",{state:()=>({Lexicons:[],LexiconClassifications:[]}),getters:{get_LexiconHash(e){const a={};return e.Lexicons.forEach(t=>a[t._id]=t),a},get_LexiconClassificationHash(e){const a={};return e.LexiconClassifications.forEach(({_id:t,name:l})=>{a[l]=e.Lexicons.filter(({lexiconClassificationID:c})=>c===t)}),a}},actions:{UPDATE_Lexicon(e){const a=this.Lexicons.findIndex(({_id:t})=>t===e._id);a!==-1?this.Lexicons[a]=e:this.Lexicons.push(e)},UPDATE_LexiconClassification(e){const a=this.LexiconClassifications.findIndex(({_id:t})=>t===e._id);a!==-1?this.LexiconClassifications[a]=e:this.LexiconClassifications.push(e)},GET_LexiconHashList(){return new Promise(async(e,a)=>{const[t,{Lexicons:l,LexiconClassifications:c}]=await I(m("/lexicon",[],{},{baseURL:"/api-common"}));t?a(t):(this.Lexicons=l,this.LexiconClassifications=c,e())})}},persist:{enabled:!0,strategies:[{key:"common",storage:localStorage}]}});function b(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!U(e)}const Q=V({name:"Example",setup:async()=>{const e=R(),a=d({lexiconClassificationID:""}),t=d([]),l=S(()=>{const i={};return t.value.forEach(s=>i[s._id]={...s}),i}),[c,v]=await I(H());return c?()=>p(n(C("CusErrData"),null,null)):(t.value=v.list,()=>p(n(C("CusCreateTablePaginationComposition"),{api:{query:T,complex:P,delete:A},"data-model":{name:{type:"empty",errMsg:"请输入名称！"},content:{},lexiconClassificationID:{type:"empty",errMsg:"请选择类型！"}},"search-bar":a,onInit:([i,s,o])=>{a.value={...o}},onHandleReset:()=>{a.value={}},onComplex:i=>e.UPDATE_Lexicon(i)},{search:()=>{let i;return n(h,null,[n(L,{filterable:!0,clearable:!0,modelValue:a.value.lexiconClassificationID,"onUpdate:modelValue":s=>a.value.lexiconClassificationID=s,placeholder:"字典类型"},b(i=t.value.map(({alias:s,_id:o})=>n(_,{label:s,value:o,key:o},null)))?i:{default:()=>[i]})])},default:()=>n(h,null,[n(r,{label:"名称",width:"260"},{default:({row:i})=>i._status&&i._status.edit?n(y,{modelValue:i.name,"onUpdate:modelValue":s=>i.name=s},null):i.name}),n(r,{label:"内容"},{default:({row:i})=>i._status&&i._status.edit?n(y,{type:"textarea",modelValue:i.content,"onUpdate:modelValue":s=>i.content=s,autosize:{minRows:1.5,maxRows:6}},null):i.content}),n(r,{label:"字典类型",width:"200"},{default:({row:i})=>{var o,f;let s;return i._status&&i._status.edit?n(L,{filterable:!0,modelValue:i.lexiconClassificationID,"onUpdate:modelValue":u=>i.lexiconClassificationID=u,placeholder:"字典类型"},b(s=t.value.map(({name:u,alias:E,_id:x})=>n(_,{label:`${u}-${E}`,value:x,key:x},null)))?s:{default:()=>[s]}):`${(o=l.value[i.lexiconClassificationID])==null?void 0:o.name}-${(f=l.value[i.lexiconClassificationID])==null?void 0:f.alias}`}})])})))}});export{Q as default};
